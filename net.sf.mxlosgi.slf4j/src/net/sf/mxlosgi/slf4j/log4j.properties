#%p 输出优先级，即DEBUG，INFO，WARN，ERROR，FATAL   
#%r 输出自应用启动到输出该log信息耗费的毫秒数   
#%c 输出所属的类目，通常就是所在类的全名   
#%t 输出产生该日志事件的线程名   
#%n 输出一个回车换行符，Windows平台为“\r\n”，Unix平台为“\n”   
#%d 输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，比如：%d{yyy MMM dd HH:mm:ss,SSS}，输出类似： 2002年10月18日 22：10：28，921   
#%l 输出日志事件的发生位置，包括类目名、发生的线程，以及在代码中的行数。举例：Testlog4.main(TestLog4.java:10)   
#   
#log4j提供4种布局.   
#org.apache.log4j.HTMLLayout（以HTML表格形式布局）  
#org.apache.log4j.PatternLayout（可以灵活地指定布局模式），  
#org.apache.log4j.SimpleLayout（包含日志信息的级别和信息字符串），  
#org.apache.log4j.TTCCLayout（包含日志产生的时间、线程、类别等等信息  
#   
#   
#log4j中有五级logger 输出级别  
#FATAL 0   
#ERROR 3   
#WARN 4   
#INFO 6   
#DEBUG 7  
  
#日志输出级别  
log4j.rootLogger=DEBUG,A1
  
#设置A1的日志输出控制台  
log4j.appender.A1=org.apache.log4j.ConsoleAppender  
#A1 使用的输出布局  
log4j.appender.A1.layout=org.apache.log4j.PatternLayout  
#灵活定义输出格式 具体查看log4j javadoc org.apache.log4j.PatternLayout   
log4j.appender.A1.layout.ConversionPattern=[%d{yyyy-MM-dd  HH:mm:ss}] [%p] # %m %n    
  
#设置R的日志输出控制台  
log4j.appender.R=org.apache.log4j.RollingFileAppender  
#设置R的输出日志  
log4j.appender.R.File=example.log  
#设置R的日志最大限制  
log4j.appender.R.MaxFileSize= 10000KB  
#最多只保存一个备份文件  
log4j.appender.R.MaxBackupIndex=20  
#设置使用灵活布局  
log4j.appender.R.layout=org.apache.log4j.PatternLayout  
#灵活定义输出格式 具体查看log4j javadoc org.apache.log4j.PatternLayout   
log4j.appender.R.layout.ConversionPattern=[%p] [%d{yyyyMMMdd  HH:mm:ss}]#%l %t  %m %n    